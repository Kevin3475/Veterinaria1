package co.edu.uniquindio.poo.app;

import co.edu.uniquindio.poo.model.Veterinaria;
import co.edu.uniquindio.poo.model.Mascota;
import co.edu.uniquindio.poo.model.Dueno;

import javax.swing.JOptionPane;

public class Main {
    public static void main(String[] args) {
        Veterinaria vet = new Veterinaria("Mi Veterinaria", "12345");
        int opcion;

        do {
            String menu = """
                    ===== MEN√ö VETERINARIA =====
                    1. Registrar Mascota
                    2. Listar Mascotas
                    3. Buscar Mascota
                    4. Actualizar Mascota
                    5. Eliminar Mascota
                    6. Registrar Due√±o
                    7. Listar Due√±os
                    8. Buscar Due√±o
                    9. Actualizar Due√±o
                    10. Eliminar Due√±o
                    11. Calcular costo de consulta
                    0. Salir
                    """;

            String input = JOptionPane.showInputDialog(null, menu, "Men√∫", JOptionPane.QUESTION_MESSAGE);

            if (input == null) {
                opcion = 0;
            } else {
                try {
                    opcion = Integer.parseInt(input.trim()); // üëà trim() para evitar errores
                } catch (NumberFormatException e) {
                    opcion = -1;
                }
            }

            switch (opcion) {
                case 1 -> {
                    // ‚úÖ Registrar Mascota (requiere due√±o)
                    String idDueno = JOptionPane.showInputDialog("Ingrese el ID del due√±o de la mascota:");
                    Dueno dueno = vet.obtenerDueno(idDueno);

                    if (dueno == null) {
                        JOptionPane.showMessageDialog(null, "Debe registrar primero al due√±o con ese ID.");
                    } else {
                        String nombre = JOptionPane.showInputDialog("Nombre de la mascota:");
                        String especie = JOptionPane.showInputDialog("Especie:");
                        String raza = JOptionPane.showInputDialog("Raza:");
                        int edad = Integer.parseInt(JOptionPane.showInputDialog("Edad:"));
                        String idMascota = JOptionPane.showInputDialog("ID de la mascota:");

                        boolean ok = vet.almacenarMascota(nombre, especie, raza, edad, idMascota, dueno);
                        JOptionPane.showMessageDialog(null, ok ? "Mascota registrada con √©xito" : "Error: Ya existe una mascota con ese ID o no hay espacio.");
                    }
                }
                case 2 -> {
                    Mascota[] lista = vet.obtenerListaMascotas();
                    StringBuilder sb = new StringBuilder("Lista de Mascotas:\n");
                    for (Mascota m : lista) {
                        if (m != null) sb.append(m.toString()).append("\n");
                    }
                    JOptionPane.showMessageDialog(null, sb.toString());
                }
                case 3 -> {
                    String id = JOptionPane.showInputDialog("ID de la mascota a buscar:");
                    Mascota m = vet.obtenerMascota(id);
                    JOptionPane.showMessageDialog(null, (m != null) ? m.toString() : "Mascota no encontrada.");
                }
                case 4 -> {
                    String id = JOptionPane.showInputDialog("ID de la mascota a actualizar:");
                    String nombre = JOptionPane.showInputDialog("Nuevo nombre:");
                    String especie = JOptionPane.showInputDialog("Nueva especie:");
                    String raza = JOptionPane.showInputDialog("Nueva raza:");
                    int edad = Integer.parseInt(JOptionPane.showInputDialog("Nueva edad:"));

                    boolean ok = vet.actualizarMascota(nombre, especie, raza, edad, id);
                    JOptionPane.showMessageDialog(null, ok ? "Mascota actualizada." : "No se encontr√≥ la mascota.");
                }
                case 5 -> {
                    String id = JOptionPane.showInputDialog("ID de la mascota a eliminar:");
                    boolean ok = vet.eliminarMascota(id);
                    JOptionPane.showMessageDialog(null, ok ? "Mascota eliminada." : "No se encontr√≥ la mascota.");
                }
                case 6 -> {
                    String nombre = JOptionPane.showInputDialog("Nombre del due√±o:");
                    String telefono = JOptionPane.showInputDialog("Tel√©fono:");
                    String direccion = JOptionPane.showInputDialog("Direcci√≥n:");
                    String id = JOptionPane.showInputDialog("ID del due√±o:");

                    boolean ok = vet.agregarDueno(nombre, telefono, direccion, id);
                    JOptionPane.showMessageDialog(null, ok ? "Due√±o registrado con √©xito" : "Error: Ya existe un due√±o con ese ID o no hay espacio.");
                }
                case 7 -> {
                    Dueno[] lista = vet.obtenerListaDuenos();
                    StringBuilder sb = new StringBuilder("Lista de Due√±os:\n");
                    for (Dueno d : lista) {
                        if (d != null) sb.append(d.toString()).append("\n");
                    }
                    JOptionPane.showMessageDialog(null, sb.toString());
                }
                case 8 -> {
                    String id = JOptionPane.showInputDialog("ID del due√±o a buscar:");
                    Dueno d = vet.obtenerDueno(id);
                    JOptionPane.showMessageDialog(null, (d != null) ? d.toString() : "Due√±o no encontrado.");
                }
                case 9 -> {
                    String id = JOptionPane.showInputDialog("ID del due√±o a actualizar:");
                    String nombre = JOptionPane.showInputDialog("Nuevo nombre:");
                    String telefono = JOptionPane.showInputDialog("Nuevo tel√©fono:");
                    String direccion = JOptionPane.showInputDialog("Nueva direcci√≥n:");

                    boolean ok = vet.actualizarDueno(nombre, telefono, direccion, id);
                    JOptionPane.showMessageDialog(null, ok ? "Due√±o actualizado." : "No se encontr√≥ el due√±o.");
                }
                case 10 -> {
                    String id = JOptionPane.showInputDialog("ID del due√±o a eliminar:");
                    boolean ok = vet.eliminarDueno(id);
                    JOptionPane.showMessageDialog(null, ok ? "Due√±o eliminado." : "No se encontr√≥ el due√±o.");
                }
                case 11 -> {
                    String idMascota = JOptionPane.showInputDialog("Ingrese el ID de la mascota para calcular el costo de consulta:");
                    Mascota mascota = vet.obtenerMascota(idMascota);

                    if (mascota == null) {
                        JOptionPane.showMessageDialog(null, "Mascota no encontrada. Verifique el ID.");
                    } else {
                        double costo = vet.calcularCostoConsulta(mascota);
                        JOptionPane.showMessageDialog(null, "El costo de la consulta para " + mascota.getNombre() + " es: $" + costo);
                    }
                }
                case 0 -> JOptionPane.showMessageDialog(null, "Saliendo del programa...");
                default -> JOptionPane.showMessageDialog(null, "Opci√≥n no v√°lida.");
            }
        } while (opcion != 0);
    }
}
